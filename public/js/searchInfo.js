// Добавление действий при загрузке страницыtry{	window.addEventListener('load', searchInfo, false); // Добавление события для W3C} catch(e){	window.attachEvent('onload', searchInfo); // Добавление события для IE}// Добавление функционала поиска информацииfunction searchInfo(){	// Увеличение размера строки поиска соответственно содержимому	var searchPhrase = document.getElementsByName('searchPhrase')[0];	if(searchPhrase.value.length > 0)		if(searchPhrase.value.length > searchPhrase.getAttribute('size'))			searchPhrase.setAttribute('size', searchPhrase.value.length);	var troubleDate = document.getElementsByName('date')[0];	// Добавление событий для документа	try{		window.document.addEventListener('keyup', documentKeyUp, false); // Добавление события для W3C	} catch(e){		window.document.attachEvent('onkeyup', documentKeyUp); // Добавление события для IE	}	// Добавление событий для поля ввода поисковой фразы	try{		searchPhrase.addEventListener('keyup', inputSearchKeyUp, false); // Добавление события для W3C        searchPhrase.addEventListener('keydown', inputSearchKeyDown, false); // Добавление события для W3C        searchPhrase.addEventListener('paste', inputSearchPaste, false); // Добавление события для W3C	} catch(e){		searchPhrase.attachEvent('onkeyup', inputSearchKeyUp); // Добавление события для IE        searchPhrase.attachEvent('onkeydown', inputSearchKeyDown); // Добавление события для IE        searchPhrase.attachEvent('onpaste', inputSearchPaste); // Добавление события для IE	}	// Добавление событий для поля даты	try{		troubleDate.addEventListener('keyup', inputDateKeyUp, false); // Добавление события для W3C	} catch(e){		troubleDate.attachEvent('onkeyup', inputDateKeyUp); // Добавление события для IE	}		// Обработка событий клавиш из документа	function documentKeyUp(e){		e = e || window.event;		var code = e.keyCode;		switch(code){			case 13:	searchPhrase.focus(); // Enter // Фокусировка						searchPhrase.select(); // и выделение текста в поле поиска						break;						case 27:	window.location.replace(window.location); // Esc						break;									default:	break;		}	}	// Обработка событий клавиш из поля даты	function inputDateKeyUp(e){		e = e || window.event;		var code = e.keyCode;		preventDefault(e);		stopPropagation(e);		switch(code){			case 13:	var form = document.getElementsByName('navForm')[0]; // Enter						form.submit();						break;						case 27:	window.location.replace(window.location); // Esc						break;									default:	break;		}	}	var shiftKeyPressed = false; // Флаг нажатия клавиши Shift	var ctrlKeyPressed = false; // Флаг нажатия клавиши Ctrl	// Обработка событий keyUp клавиш из поля фразы поиска	function inputSearchKeyUp(e){		e = e || window.event;		var code = e.keyCode;		preventDefault(e);		stopPropagation(e);		switch(code){			case 13:	abort_ajax(); // Enter						var regExp = /([\t])+/g; // Замена табуляции на пробел						searchPhrase.value = searchPhrase.value.replace(regExp, " ");						regExp = /([ ])\1+/g; // Замена повторяющихся пробелов на один						searchPhrase.value = searchPhrase.value.replace(regExp, "$1");                		var form = document.getElementsByName('navForm')[0];						form.submit();						break;			case 27:	window.location.replace(window.location); // Esc						break;			case 38:	movingAjaxList('up'); // Up						break;			case 40:	movingAjaxList('down'); // Down						break;			case 16:	setTimeout(function() {shiftKeyPressed = false;}, 1000); // Shift						break;			case 17:	setTimeout(function() {ctrlKeyPressed = false;}, 1000); // Ctrl						break;						case 86:	if(ctrlKeyPressed || e.ctrlKey) break; // Ctrl + v (для этого есть событие paste)						case 45:	if(shiftKeyPressed || e.shiftKey) break; // Shift + Insert (для этого есть событие paste)			default:	abort_ajax();			            var newValue = searchPhrase.value;						var regExp = /([\t])+/g; // Замена табуляции на пробел						newValue = newValue.replace(regExp, " ");						regExp = /([ ])\1+/g; // Замена повторяющихся пробелов на один						newValue = newValue.replace(regExp, "$1");						searchPhrase.value = newValue;						regExp = /\+/g; // Экранирование + (так как он удаляется сервером)                        newValue = newValue.replace(regExp, "plusplusplus");                        search_ajax(newValue);						break;		}	}    // Обработка событий keyDown клавиш из поля фразы поиска    function inputSearchKeyDown(e){        e = e || window.event;        var code = e.keyCode;        switch(code){            case 13:	preventDefault(e); // Enter                		stopPropagation(e);                		break;            case 16:	shiftKeyPressed = true; // Shift						break;            case 17:	ctrlKeyPressed = true; // Ctrl                		break;            default:	break;        }    }		// Обработка событий paste из поля фразы поиска    function inputSearchPaste(e){		/*e = e || window.event;		var clipboardData = e.clipboardData || window.clipboardData;*/		abort_ajax();		setTimeout(function(){		    var searchPhrase = document.getElementsByName('searchPhrase')[0];		    var newValue = searchPhrase.value;		    var regExp = /([\r\n])+/g; // Удаление символов переноса строки            newValue = newValue.replace(regExp, "");            regExp = /([\t])+/g; // Замена табуляции на пробел            newValue = newValue.replace(regExp, " ");            regExp = /([ ])\1+/g; // Замена повторяющихся пробелов на один            newValue = newValue.replace(regExp, "$1");            searchPhrase.value = newValue;            regExp = /\+/g; // Экранирование + (так как он удаляется сервером)            newValue = newValue.replace(regExp, "plusplusplus");            search_ajax(newValue);		}, 100);    }		// Отмена всплытия события	function stopPropagation(e){		try{			e.stopPropagation(); // Отмена всплытия события W3C		}catch(x){			event.cancelBubble = true; // Отмена всплытия события IE		}	}		// Запрет действия браузера по умолчанию	function preventDefault(e){		try{			e.preventDefault(); // Запрещаем действие браузера по умолчанию W3C		} catch(x){			e.returnValue = false;  // Запрещаем действие браузера по умолчанию IE		}	}}